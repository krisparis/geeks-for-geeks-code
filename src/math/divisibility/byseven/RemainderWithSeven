package math.divisibility.byseven;

import static math.utils.CharUtils.toInt;

/**
 * 
 * <p>
 * For each multiple of 10 we can find its corresponding remainder.
 * <ul>
 * <li>1 % 7 = 1</li>
 * <li>10 % 7 = 3</li>
 * <li>100 % 7 = 2</li>
 * <li>1000 % 7 = -1</li>
 * <li>10000 % 7 = -3</li>
 * <li>100000 % 7 =-2</li>
 * </ul>
 * </p>
 * <p>
 * The series repeats itself for larger powers 1000000 % 7 = 1, 10000000 % 7 = 3
 * </p>
 * <p>
 * We use that for calculating the remainder of a given number.
 * </p>
 */
public class RemainderWithSeven {

	private static int[] remainder_series = { 1, 3, 2, -1, -3, -2 };

	public static void main(String[] args) {
		// 12345 => 4
		String input = "12345";
		System.out.println(input + " ==> " + calculateRemainder(input.toCharArray()));
	}

	private static int calculateRemainder(char[] digits) {
		int total = 0;
		int remainderIndex = 0;
		for (int i = digits.length - 1; i >= 0; i--) {
			int digit = toInt(digits[i]);
			int remainder = remainder_series[remainderIndex];
			total += digit * remainder;
			remainderIndex = (remainderIndex + 1) % (remainder_series.length - 1);
		}
		return total % 7;
	}

}
